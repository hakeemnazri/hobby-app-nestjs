generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  firstName String
  lastName  String?
  email     String  @unique
  password  String?
  googleId  String? @unique

  posts Post[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Post {
  id               Int        @id @default(autoincrement())
  tags             Tag[]
  title            String
  postType         PostType
  slug             String     @unique
  postStatus       PostStatus
  content          String?
  schema           String?
  featuredImageUrl String?
  publishedOn      DateTime?
  userId           Int

  metaOption Meta_Option[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Tag {
  id               Int     @id @default(autoincrement())
  Post             Post[]
  name             String
  slug             String  @unique
  description      String?
  schema           String?
  featuredImageUrl String?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  postId    Int?
}

model Meta_Option {
  id        Int  @id @default(autoincrement())
  postId    Int
  metaValue Json

  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map("meta_option")
}

enum PostType {
  post
  page
  story
  series
}

enum PostStatus {
  draft
  published
  review
  scheduled
}
